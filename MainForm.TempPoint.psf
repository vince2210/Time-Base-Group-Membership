<File version="3.2">
  <FileID>a27f21ce-3ef0-4673-8e46-49fccb1ffd41</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAADhpSURBVHhe7d1Xc5xnmqf5PpjdDzHR+wH2U2zE
xszRHOzJnszsTmx39Ux0V0mt7jIq0yWVVF2ypCiKFCmRkugdSIIgSJDw3nvvPRLpLbwl+d/nfoGk
ICppRbAA5vWLuAJA5vtmJkAwnzst/gYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AOxRf/rf/vZvC9790/sFh48cLzh46AgRERHtsw59fqTg6LETBT/72c8K/pf/8B8Kttf4x/vb//gf
q747n6Oeybj6Z1LqnUoQERHRPszW8a7RgH7+xj9re5l/vD+++36B7VTTM62qznEiIiLK2MRz9tfZ
r2kopOrmnqcPAEePfV0wHFhQTdekanumiIiIaGfdk6rvnVad5b5+lmz7dC+8X4bjH9fW+Wxd1oaB
WTV1DT99APj88NGCYf+CO4H0mc6o3k7MTrQ/qtq+mOoG4mrom314oYiIiLKlxn6fShoHlVvcoryS
tmcqt7hVFa2jKq4f8D6/4Q6zbpa161ZFp/LLO72PN8s6vMNtn/THqvZx3a3t9fbLK03v1+Htc7O0
fevjo/u5w2s6J9xaPaPmoaAaOgafbQAYDS65nXxqdFNDQ/eY6tv7VdcxpJbKE2qv/FyNhQdU19Kq
xsGg+0HMqnkw4NXktrcfzOObcafpdxfGtvdnOP7HNXnbuf3c+TTZeTzjfjuzb94uW8PDzzNvZzW5
y/e07+PhNvYzcpcr0zZERPR61jQ46y3GlW3Dqu4YU9VTsm3Kmga9RdkW7Jrtw2s6x1XqDr9W1OhO
r1nXChtVWNfrHZ4+vriuTze8Rb5DdV0T26c37gaQfnd6LSpvGXbHt6i0ccA7vLp9TLVuuztVXW5o
6FOLW29bR8Jq7Bx6tgFgLLzsLXK2WDb2jKmu032T7YOarPqFFPxYM0X/h8rKb6l1bE717kQLSip1
q7TOfYMD3mMNbaNhd4Yh70ztzFuG7fOQ+zzoBol+t321iuq6H26bvoA7t212x7UO+1Te2OsNGi2D
Myqtadad8mbV9frcfhHv9NrS+7nPt/Z3H91pfH/4rIqrmlTVOeUOC7jPG1TVNa12t3/r9rZ23nae
7WMR1bphp6pjwrtcNtRsXa6gd3yr2/b7bSa3Pu8YVn3frHd5vMvtfjFsuCEiotezluGAd6u71t3C
ru6cdE24dWnrBm5Dv8v7OOs9lG7HVbuPVW2j7hZ+lwqqur171O2wmp4Znb5yR1XVjaquaVJNbbPO
XLqlspYRt++UarqnvAXezutudY93176tT/b4/lenrqmwuEpHT17R3aJKfX36ujvNreNruidVXN+v
4oYBt+7ZuhV99ocAJqOrbjELbu3UO6723/6jKt76R3Xk/hdttP3v6jv9v6qorEidk/PqGAursq7J
Lei9augZd8PCiMrrO1TZ0qey+k63ePtV3zGgcjcctI/HVdPUqoLSehVVt7qFc0oVjd1q6HUXuqlr
63GLjkFVNA+quX9KZTUNyi+qU9t4wu3XppL6XtV3j6vRXaYKNxjUd4+ptLZ16zEOO7xvWvVdbvpp
61dpXaca+vzqmgjq1q0C3a7pU/vwhHKu5ami3f2AWnrdtDTqFvMBlTV0qbK5R5WtQ6pudpNWYbWq
3BTVOuRTRX2XO303jTX1qqrVLfytA+6wFne5aryprtH7nkdV0dDh/qEGvcGjzf3siIjo9azdrXu3
K91C7hboereIN7pFv7C2Vxdyy3Qpr0IXrpfqakGd6rqn3frmU73L7o63xf9uda+a3HBgh9X1+JRX
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
l7/8perq6rSxsfFw7d2zA4A9GTAUCumNN97Q5cuXdfHiRSIiInrOrl+/rt/+9rfKycnRgwcPHq69
e34AePvtt5WXl6fc3FwiIiJ6zgoKCrx702/cuKH79+8/XHv3xQBgF9omGCIiInq+bt++zQBARESU
bTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEA
EBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBER
ZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEM
AERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERE
RFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkY
AwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAR
EVEWxgBARESUhTEAEBERZWEMAERERFnYvh0Afve733kXPj8/n4iIiJ6zoqIiffDBB/trAIhEIvq7
v/s7ffbZZzpw4AARERE9Z0eOHNE//MM/KCcnRw8ePHi49u7ZAcA+WteuXdPp06eJiIjoBfv22281
NDSklZWVh2vvnh0A0tndFQAA4MXYrX6zvLzsLfrp9XXPDwBERET08mMAICIiysIYAIiIiLIwBgAi
IqIsjAGAiIgoC7MBwN5v568+ACSTSQWDQW8aISIiot3NFn97v52/6gBAREREez8GACIioiyMAYCI
iCgLYwAgIiLKwhgAiIiIsrBdHQDs2YivKvuLg/Yx0+UgIqLXo53X97vds64rO7fd7V7mWrcrA4Bd
uPRrEu3lgK8qe/+Bl/WDISKivZVdv9t7zGS6/t+t7CV2mS5LOrtMsVhMgUAg4/67ka2ttsZmujzP
064NAHYh7ePq6uqP2tjY1ObmptbXfnzci2Z/FtHOM5FIMAQQEb1mpRdae617pjXA2nDriq0tazvW
lrX1dbfWrP1gu4fHPebwdHa8rSmPe4MdO8xueNrxtgZlOo1Hs/VvY/3J5/u07LzTa+yjl+l52pUB
IP2WhMb+dOHOzEIyqtlZv1bveV/+SHq7tEe/evQ009vb+T7vGyEQEdHez+76tkXP/gyu+fEa8ECp
WEiz/qA2dywam2srWlha3f5qpwe6d297EXrktL4/Tbe/Gyjs1v3jBoD0PQQm02nszKSiISWW1r3P
3YFbH7dl2udxvYx7AXZ1ALALef/+/YfZt7qxGNBXnx/RtWvndfZK5dZ3/Zwe7DjNdIYBgIjo9cwG
AFv0lpbc4uM8ev2/EBzS4YNHlXPhlK7fafcOc6uF8r87rcbh0PbXO9yf0638Ei1tr8E7Ty+drWEb
GxuPvbVth9maY58/7jTSmeBwq745elSnLucqmFrxDtODDfV3tKpnaOZHa+aT2pcDwPrclD7/5Avd
vZ2rS+fzdOfaV/rkq291/do1fXbkiI5+c0VNrY26cvqgckqKVVvToM72LpUVFejLw+/r9J0mbbjT
fXQIMAwARESvZ08bAJIz3Trw6XHdzsvRtZxbyj1/WB9+cUBv/dMfdPbSNZ357pyOHfmLTlwrVP7F
0zrx1Vkd/MvH+vjAcXWMRDMuvi9tAPCGjDV3mS4q5G78L0506LNPTmo6ElNrTanef/st/fqDb2X3
Rzx4kGH/DO3LAWAtOakvPj+hqsJ8HTnwmX7983/WgY8/0Z/+ckTnzuXo3PnLevf3f1RlXYWuXs9V
3tUzev/QUZ088JF++es/6PMTOVqxf+9HfkiGAYCI6PXsaQNAYqpTn39xSuW3b7iF/SP96o1/1Ucf
faTPjl9QTk6ezn15RP/65q916IvjOuE+f+/3/6YPvshRW125cvLrvdPYeZrWyxsAvPu/dTcnRwPT
Pl07fUxv/upDtfcO68Lxg3rzrd8rp6jtyafxSPtvAHBfr80FVFPf632jjUWFyss5p5yCQlXXt6ih
sU317mN9dakunDqo3Jo+zbmp7tz1EiXCUzpz4kuVdY1r041TO0/XMgwARESvZ08aAGxtSQbHVd82
5o7ZVNXtW8q9cla5xeWqqWtWbUO7xkdHdePc17rT1K3mO7d0+PPPdbuiQ7NTI2psH/nRepU+3Zf1
EIA7KS2Ex3T+6y/07r9/orxbRfruyxM6890V3cjNUc7VAi3es8f3M+//aHt6ALAL96rZXyFkACAi
ev1KPwkwPQC8Kk97EqCtObbmvWr2s9iTA4D9UGwAsHsB7CUSr6L06zB/6g+EiIj2Xrau2Evy7Hre
ru8zrQO7kS20T7phaTc8/X7/c10m+z6sTMc9S7a+Wo+7TM/argwA6ewH5/P5NDs7u6ulz4P3ACAi
en2z63dbaF/FumLZ+dgN2SetK3acrT3p7R89jZedncfjHpJ43nZ1ALC7bBYXF72PryIWfyKi1zu7
ns90/b8b2fr1LOvKq75M9jHT5XjednUAICIior0ZAwAREVEWxgBARESUhTEAEBERZWEMAERERFkY
AwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAR
EVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEW
xgBARESUhb2UAWDRDQB2QkRERLQ/WnDN/dQBwE7IpggiIiLaH9nin3S90AAw5F/QsGvU7WwnQERE
RPsrW8vHn3UAOHL0eEFyU94Olk0OREREtP+ydXxmTuobCzx9AHj/3z+oHPdHvWmBiIiI9ne2+Nc3
dz19AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALvvb/7m/wcWDukEMWdD
3AAAAABJRU5ErkJggg==</Preview>
  <Form>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
1cdWfxGC3/2orp+9+PHH/u//DyKYsqxbcgAA</Form>
  <Code><![CDATA[
$MainForm_Load={
#TODO: Initialize Form Controls here
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
		
		$paramShowSplashScreen = @{
			Image    = $pictureboxSplashScreenHidden.Image
			Title    = 'Loading...'
			PassThru = $false
		}
	
	Show-SplashScreen @paramShowSplashScreen
	$global:ForestMode = $(Get-ADForest).ForestMode # doit etre une foret en "Windows2016Forest"
	$global:DomainMode = $(Get-ADDomain).DomainMode # doit etre une foret en "Windows2016Domain"
	$global:PAMF = $(Get-ADOptionalFeature -Filter { Name -like "Privileged Access Management Feature" }).EnabledScopes # Verification de l'activation de la feature PAM
	$Global:domain = (Get-ADDomain).DNSRoot # Variable du nom de domain  pour l'activation du scope "Enable-ADOptionalFeature "Privileged Access Management Feature" -Scope ForestOrConfigurationSet -Target $domain"
	$distinguishedname = $Global:domain.DistinguishedName
	$label1.Text = "Forest Mode : " + $global:ForestMode
	$label1.ForeColor = 'Green'
	$listgroups = Get-ADGroup -filter 'GroupCategory -eq "Security"' -SearchBase "$distinguishedname" -Properties Name
	$combobox1
	
	#Measure-Command -Expression { Get-ADGroup -filter 'GroupCategory -eq "Security"' -SearchBase "DC=lab,DC=metsys,DC=fr" -Properties * }
	#Measure-Command -Expression { Get-ADGroup -filter 'GroupCategory -eq "Security"' -SearchBase "$distinguishedname" -Properties SamAccountName, Name, Members, MemberOf, Member, DistinguishedName -ShowMemberTimeToLive }
	
	
	
	#-filter 'GroupCategory -eq "Security"'
	
	
	#SamAccountName, DistinguishedName, ObjectClass
	
	#$Global:users = Get-ADUser -Filter { GivenName -like $input -or surname -like $input -or SamAccountName -like $input } -Properties * | Sort-Object -Property Name
	#$Global:Groups = Get-ADUser -Filter { GivenName -like $input -or surname -like $input -or SamAccountName -like $input } -Properties * | Sort-Object -Property Name
	#Measure-Command -Expression { Get-ADUser -Filter 'employeetype -eq "regular"' -SearchBase "OU=people,DC=company,DC=com" -Properties * }
}

$buttonCallChildForm_Click={
	#TODO: Place custom script here
	if((Show-ChildForm_psf) -eq 'OK')
	{
		
	}
}

#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($null -eq $Item)
	{
		$DataGridView.DataSource = $null
	}
	elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}



function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterCIMProperties
			This switch removes CIM properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterCIMProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($null -eq $InputObject)
	{
		$Table.Clear()
		return @( ,$Table)
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterCIMProperties -or -not $prop.Name.StartsWith('__')) #filter out CIM properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)
}



function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}


#endregion

$buttonQuit_Click={
	#TODO: Place custom script here

	
}






$buttonAdd_Click={
	#TODO: Place custom script here
	$ttl = New-TimeSpan -Seconds ($datetimepicker1.Value - $(get-date)).Totalseconds
	Write-Debug $ttl
}

$combobox1_SelectedIndexChanged={
	#TODO: Place custom script here
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>