<File version="3.2">
  <FileID>a27f21ce-3ef0-4673-8e46-49fccb1ffd41</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAADhoSURBVHhe7d1Xc5xnmqf5PpjdDzHR+wH2U2zE
xs7RHuzJnqyZ2O7qmajuklrdZVSlqpJKqi6VDCmKIkVKpCR6B5IgCBIkvPfeew+k9/CW5H+f+wWS
gqikFcECmNcv4opMZL5pAIL53GnxdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
YI/60//0939f8N6fPig4fOR4wcFDR4iIiGifdejzIwVHj50o+NnPflbwP/yn/1SwvcY/3t//5/9c
9d35HPVMxtU/k1LvVIKIiIj2YbaOd40G9C9v/Ku2l/nH++N7HxTYiWp6plXVOU5EREQZm3jO/jan
axoKqbq55+kDwNFjXxcMBxZU0zWp2p4pIiIi2ln3pOp7p1Vnua+fJds+3QufLsPxj2vrcraua8OA
T01dw08fAD4/fLRg2L/gziB9oTOqtzOzM+2PqrYvprqBuBr6fA+vFBERUbbU2D+rksZB5Ra3KK+k
7ZnKLW5VReuoiusHvP033GHWzbJ23aroVH55p7d7s6zDO9xOk96tah/X3dpe73R5penTdXinuVna
vrX76Onc4TWdE26tnlHzUFANHYPPNgCMBpfciWbV6KaGhu4x1bf3q65jSC2VJ9Re+bkaCw+orqVV
jYNB94PwqXkw4NXktrcfzOObcefpd1fGtvdnOP7HNXnbudO5y2myy3jG0+3Mvnm7bg0P92fezmpy
1+9p38fDbexn5K5Xpm2IiOj1rGnQ5y3GlW3Dqu4YU9VTsm3Kmga9RdkW7Jrtw2s6x1XqDr9W1OjO
r1nXChtVWNfrHZ4+vriuTze8Rb5DdV0T2+c37gaQfnd+LSpvGXbHt6i0ccA7vLp9TLVuuztVXW5o
6FOLW29bR8Jq7Bx6tgFgLLzsLXK2WDb2jKmu032T7YOarPqFFPxYM0X/i8rKb6l1bE717kwLSip1
q7TOfYMD3nMNbaNhd4Eh70LtwluGbX/I7Q+6QaLfbV+torruh9umr+DObZvdca3Dsypv7PUGjZbB
GZXWNOtOebPqemfd6SLe+bWlT+f2b53e7brz+P5wn4qrmlTVOeUOC7j9Darqmla7O33r9rZ22XaZ
7WMR1bphp6pjwrteNtRsXa+gd3yr2/b7bSa39ncMq77P510f73q7XwwbboiI6PWsZTjg3euudfew
qzsnXRNuXdq6g9vQ7/J2fd5T6XZctdutaht19/C7VFDV7T2ibofV9Mzo9JU7qqpuVHVNk2pqm3Xm
0i2VtYy4006ppnvKW+Dtsu5W93gP7dv6ZM/vf3XqmgqLq3T05BXdLarU16evu/PcOr6me1LF9f0q
bhhw656tW9FnfwpgMrrqFrPg1ol6x9X+25+r4q2fqyP3f9dG2/+svtP/o4rKitQ5Oa+OsbAq65rc
gt6rhp5xNyyMqLy+Q5UtfSqr73SLt1/1HQMqd8NB+3hcNU2tKiitV1F1q1s4p1TR2K2GXnelm7q2
nrfoGFRF86Ca+6dUVtOg/KI6tY0n3OnaVFLfq/rucTW661ThBoP67jGV1rZuPcdhh/dNq77LTT9t
/Sqt61RDn19dE0HdulWg2zV9ah+eUM61PFW0ux9QS6+blkbdYj6gsoYuVTb3qLJ1SNXNbtIqrFaV
m6Jah2ZVUd/lzt9NY029qmp1C3/rgDusxV2vGm+qa/S+51FVNHS4f6hBb/Bocz87IiJ6PWt3697t
SreQuwW63i3ijW7RL6zt1YXcMl3Kq9CF66W6WlCnuu5pt77Nqt5lD8fb4n+3uldNbjiww+p6ZpVX
UKm21k4d/OKMKtwd1JLyOhU1DHpPs9sQUdU25l1Wobs3b6ezp+ftDvqVglrdKaxQPBbV7Tvlunq3
wRtAbBCxR7tLGwdV2jSkzvGIuibjau4eeZYB4FjBdGJdHXaiqYRbiCdV/n/8b8r7L/+rrl35SDln
3lLu6bdU39qm7qmUK6G6lk63eLqFu6FNd8rcla9scru13uJcXN2k/IIi5Zc2qGUsrob2Tt0urlFJ
XYfqO4d18/Zd3a1qcQNBs7s33a+bt+7qdnmDiqqaVemGgjtlDeqcTqnSTUZ1fbOqqnfDhvshFVW2
qNRNTOXNfe5yGnS3wg0UXSMqccfdKWtUeUO7m4B61DMdVZk7rNANHKX1be60TSqpbFDuzbsqqm1R
QUmtu47uNBXucHcditwkVlLjFnO3yN8prdb1/GIV1zbqrjvPiqZON+i477WxTYUVjd73VlLr9ts/
WFWbuz6NqnVDR/dE1PuhExHR61f3ZEwF7h55gy22bqFuHYnqm/P5aqxrUG9Prwb6+nTuwjXdcYu2
9/y7GxBq3T3+OzW93kLe7BbqRne6xoGgzl6+pfLScn176pJKit0AceWmylrH3GJvTzUHvOf/77ih
we7Rtw4FvKHAzvPbiwW6ds1tW1alq1fzdOrKXe8Rbe9peXd8efOwu1M64tbAuHpnUmrtHX22AWA2
tekmhpg7YVIdI7MqPHtWBd99q09uRfX/fL2pc0Uj6h+dUo+9z3A25Rb1blW3j6imudMtnm3uhzKh
qsYed+94RBV1btGtcMNAU78bKFJq6nQTkFvgy9095rK6Vt0qLFdFi7tXXdfkFlq3rVtM7Z50dVOH
93D93Ypmdc0sqK132B3f4hbcVu+01e2jqm/v8QYF7555U7tb+GtUXNOiYrfA20Jf1TGu/tmou8fe
odpWt21th+ra+tzi7gaV0lo3kQ24/d3e9axuG1J9R583BBS661fW2OUGkHYVlDWptr1XFY32CMKM
u4xqdxlu2OixRxE6VeoGmbIaO029u27tahmNup9L3PsFISKi16/e6YTuusXc7pE3ukW6dSSi3OIm
fXM211vQz17K16lLt1Xr7q17T6UPBt2aMe0W/34V1w14Tyvb4m6nu5xfpVMX8nTlRpHOXbmt024h
t+Oa3WnsqfCajgnvufzShkF1jEW2n+KO6Py1Yp2+eFPfXi70Tn8ht1Ttbv2x87anuCtbR1XZNubW
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
l7/8perq6rSxsfFw7d2zA4C9GDAUCumNN97Q5cuXdfHiRSIiInrOrl+/rt/+9rfKycnRgwcPHq69
e34AePvtt5WXl6fc3FwiIiJ6zgoKCrxH02/cuKH79+8/XHv3xQBgV9omGCIiInq+bt++zQBARESU
bTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEA
EBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBER
ZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEM
AERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERE
RFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkY
AwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAREVEWxgBARESUhTEAEBERZWEMAERERFkYAwAR
EVEWxgBARESUhTEAEBERZWEMAERERFnYvh0Afve733lXPj8/n4iIiJ6zoqIiffjhh/trAIhEIvqH
f/gHffbZZzpw4AARERE9Z0eOHNE//dM/KScnRw8ePHi49u7ZAcB2rWvXrun06dNERET0gn377bca
GhrSysrKw7V3zw4A6ezhCgAA8GLsXr9ZXl72Fv30+rrnBwAiIiJ6+TEAEBERZWEMAERERFkYAwAR
EVEWxgBARESUhdkAYJ+38zcfAJLJpILBoDeNEBER0e5mi7993s7fdAAgIiKivR8DABERURbGAEBE
RJSFMQAQERFlYQwAREREWdiuDgD2asRXlf3FQdvNdD2IiOj1aOft/W73rOvKzm13u5e51u3KAGBX
Lv2eRHs74KvKPn/gZf1giIhob2W37/YZM5lu/3cre4tdpuuSzq5TLBZTIBDIePrdyNZWW2MzXZ/n
adcGALuStru6uvqjNjY2tbm5qfW1Hx/3otmfRbTLTCQSDAFERK9Z6YXW3uueaQ2wNty6YmvL2o61
ZW193a01az/Y7uFxjzk8nR1va8rjPmDHDrM7nna8rUGZzuPRbP3bWH/y5T4tu+z0GvvodXqedmUA
SH8kobE/Xbgzs5CMyufza/We9+WPpLdLe/SrR88zvb1d7vN+EAIREe397KFvW/Tsz+CaH68BD5SK
heTzB7W5Y9HYXFvRwtLq9lc7PdC9e9uL0CPn9f15utO7gcLu3T9uAEg/QmAyncfOTCoaUmJp3dvv
Dtza3ZbpNI/rZTwKsKsDgF3J+/fvP8y+1Y3FgL76/IiuXTuvs1cqt77r5/Rgx3mmMwwARESvZzYA
2KK3tOQWH+fR2/+F4JAOHzyqnAundP1Ou3eYWy2U/91pNQ6Htr/e4f6cbuWXaGl7Dd55fulsDdvY
2HjsvW07zNYc2/+480hngsOt+uboUZ26nKtgasU7TA821N/Rqp6hmR+tmU9qXw4A63NT+vyTL3T3
dq4unc/TnWtf6ZOvvtX1a9f02ZEjOvrNFTW1NurK6YPKKSlWbU2DOtu7VFZUoC8Pf6DTd5q04c73
0SHAMAAQEb2ePW0ASM5068Cnx3U7L0fXcm4p9/xh/fWLA3rrn3+vs5eu6cx353TsyF904lqh8i+e
1omvzurgXz7WxweOq2MkmnHxfWkDgDdkrLnrdFEhd+d/caJDn31yUtORmFprSvXB22/p1x9+K3s8
4sGDDKfP0L4cANaSk/ri8xOqKszXkQOf6df/8q868PEn+tNfjujcuRydO39Z773zR1XWVejq9Vzl
XT2jDw4d1ckDH+mXv/69Pj+RoxX7937kh2QYAIiIXs+eNgAkpjr1+RenVH77hlvYP9Kv3vh3ffTR
R/rs+AXl5OTp3JdH9O9v/lqHvjiuE27/++/8QR9+kaO2unLl5Nd757HzPK2XNwB4j3/rbk6OBqZn
de30Mb35q7+qvXdYF44f1JtvvaOcorYnn8cj7b8BwH29NhdQTX2v9402FhUqL+eccgoKVV3foobG
NtW73frqUl04dVC5NX2ac1PdueslSoSndObElyrrGtemG6d2nq9lGACIiF7PnjQA2NqSDI6rvm3M
HbOpqtu3lHvlrHKLy1VT16zahnaNj47qxrmvdaepW813bunw55/rdkWHfFMjamwf+dF6lT7fl/UU
gDsrLYTHdP7rL/Tef3yivFtF+u7LEzrz3RXdyM1RztUCLd6z5/czn/7R9vQAYFfuVbO/QsgAQET0
+pV+EWB6AHhVnvYiQFtzbM171exnsScHAPuh2ABgjwLYWyReRen3Yf7UHwgREe29bF2xt+TZ7bzd
3mdaB3YjW2ifdMfS7nj6/f7nuk72fViZjnuWbH21HnednrVdGQDS2Q9udnZWPp9vV0tfBp8BQET0
+ma377bQvop1xbLLsTuyT1pX7Dhbe9LbP3oeLzu7jMc9JfG87eoAYA/ZLC4ueruvIhZ/IqLXO7ud
z3T7vxvZ+vUs68qrvk62m+l6PG+7OgAQERHR3owBgIiIKAtjACAiIsrCGACIiIiyMAYAIiKiLIwB
gIiIKAtjACAiIsrCGACIiIiyMAYAIiKiLIwBgIiIKAtjACAiIsrCGACIiIiyMAYAIiKiLIwBgIiI
KAtjACAiIsrCGACIiIiyMAYAIiKiLIwBgIiIKAtjACAiIsrCGACIiIiyMAYAIiKiLIwBgIiIKAtj
ACAiIsrCXsoAsOgGADsjIiIi2h8tuOZ+6gBgZ2RTBBEREe2PbPFPul5oABjyL2jYNepObGdARERE
+ytby8efdQA4cvR4QXJT3gksmxyIiIho/2Xr+Myc1DcWePoA8MF/fFg57o960wIRERHt72zxr2/u
evoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdt/f/d3/D+PH6AO3FzwN
AAAAAElFTkSuQmCC</Preview>
  <Form>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
1cdWfxGC3/2orp+9+PHH/u//DyKYsqxbcgAA</Form>
  <Code><![CDATA[
$MainForm_Load={
#TODO: Initialize Form Controls here
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
		
		$paramShowSplashScreen = @{
			Image    = $pictureboxSplashScreenHidden.Image
			Title    = 'Loading...'
			PassThru = $false
		}
	
	#Show-SplashScreen @paramShowSplashScreen
	$global:ForestMode = $(Get-ADForest).ForestMode # doit etre une foret en "Windows2016Forest"
	$global:DomainMode = $(Get-ADDomain).DomainMode # doit etre une foret en "Windows2016Domain"
	$global:PAMF = $(Get-ADOptionalFeature -Filter { Name -like "Privileged Access Management Feature" }).EnabledScopes # Verification de l'activation de la feature PAM
	$Global:domain = (Get-ADDomain).DNSRoot # Variable du nom de domain  pour l'activation du scope "Enable-ADOptionalFeature "Privileged Access Management Feature" -Scope ForestOrConfigurationSet -Target $domain"
	$distinguishedname = (Get-ADDomain).DistinguishedName
	$label1.Text = "Forest Mode : " + $global:ForestMode
	$label1.ForeColor = 'Green'
	$listgroups = Get-ADGroup -filter 'GroupCategory -eq "Security"' -SearchBase "$distinguishedname" -Properties Name
	
	$listgroups | Sort-Object Name | % { Update-ComboBox $combobox1 $_.Name -Append }
	
	#Measure-Command -Expression { Get-ADGroup -filter 'GroupCategory -eq "Security"' -SearchBase "DC=lab,DC=metsys,DC=fr" -Properties * }
	#Measure-Command -Expression { Get-ADGroup -filter 'GroupCategory -eq "Security"' -SearchBase "$distinguishedname" -Properties SamAccountName, Name, Members, MemberOf, Member, DistinguishedName -ShowMemberTimeToLive }
	
	
	
	#-filter 'GroupCategory -eq "Security"'
	
	
	#SamAccountName, DistinguishedName, ObjectClass
	
	#$Global:users = Get-ADUser -Filter { GivenName -like $input -or surname -like $input -or SamAccountName -like $input } -Properties * | Sort-Object -Property Name
	#$Global:Groups = Get-ADUser -Filter { GivenName -like $input -or surname -like $input -or SamAccountName -like $input } -Properties * | Sort-Object -Property Name
	#Measure-Command -Expression { Get-ADUser -Filter 'employeetype -eq "regular"' -SearchBase "OU=people,DC=company,DC=com" -Properties * }
}

$buttonCallChildForm_Click={
	#TODO: Place custom script here
	if((Show-ChildForm_psf) -eq 'OK')
	{
		
	}
}

#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($null -eq $Item)
	{
		$DataGridView.DataSource = $null
	}
	elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}



function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterCIMProperties
			This switch removes CIM properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterCIMProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($null -eq $InputObject)
	{
		$Table.Clear()
		return @( ,$Table)
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterCIMProperties -or -not $prop.Name.StartsWith('__')) #filter out CIM properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)
}



function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}


#endregion

$buttonQuit_Click={
	#TODO: Place custom script here

	
}






$buttonAdd_Click = {
	#TODO: Place custom script here
	$ttl = New-TimeSpan -Seconds (($datetimepicker1.Value - $(get-date)).Totalseconds)
	Write-Debug $ttl
}

$combobox1_SelectedIndexChanged = {
	#TODO: Place custom script here
	$users = ($(Get-ADGroup $combobox1.Text -ShowMemberTimeToLive -Properties "Members").Members)
	
	$A = ""
	if ($users.count -gt 1)
	{
		foreach ($user in $users)
		{
			if (([regex]::Matches($($user.Split(',')[0]), $global:regexttl).Success) -eq 'True')
			{
				#convertion du ttl en date
				$ttl1 = New-TimeSpan -Seconds (([regex]::Matches($($users[0].Split(',')[0]), $regexttl).groups[3].value))
				$a = (get-date).AddSeconds($ttl1.TotalSeconds)
				$a
			}
		}
	}
	else
	{
	}
	#$rows = Import-Csv -Path C:\ps-test\SAPIENMVP2015.csv  -Header ID, Name, City, State, Country
	
	#$regexttl= '((^<TTL=)([0-9]*)(>))'
	#[regex]::Matches(($users[0].split(","))[0], $regexttl)
	#Get-Date ([regex]::Matches($($users[0].Split(',')[0]), $regexttl).groups[3].value)
	Write-Debug $a
	
	$table = ConvertTo-DataTable -InputObject $users
	#Load-DataGridView -DataGridView $datagridview1 -Item $table
	Update-DataGridView -DataGridView $datagridview1 -Item $table
	#$users | % { $datagridview1.Rows.Add($_.members)}
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>